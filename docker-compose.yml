version: '3.8'

services:
  db: 
    container_name: postgres
    image: postgres:15.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - ./db/data:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:${PG_PORT}
  # backend: 
  #   container_name: rest-api
  #   build: . 
  #   depends_on:
  #     - db
  #   restart: always
  #   environment:
  #     - PORT=${PORT}
  #     - TYPE=${TYPE}
  #     - PG_HOST=db
  #     - PG_PORT=${PG_PORT}
  #     - PG_PASSWORD=${PG_PASSWORD}
  #     - PG_USERNAME=${PG_USERNAME}
  #     - PG_DATABASE=${PG_DATABASE}

#version: '3.4'
#
#services:
#  library:
#    container_name: library
#    image: postgres
#    env_file:
#      - .env
#    volumes:
#      - data:/var/lib/postgresql/data
#      - logs:/var/lib/postgresql/logs
#    environment:
#      - POSTGRES_USER=${PG_USERNAME}
#      - POSTGRES_PASSWORD=${PG_PASSWORD}
#      - POSTGRES_DB=${PG_DATABASE}
#    ports:
#      - ${PG_PORT}:${PG_PORT}
#    networks:
#      - app-network
#    restart: always
#
#  app:
#    container_name: app
#    image: node
#    build: .
#    env_file:
#      - .env
#    depends_on:
#      - library
#    environment:
#      - PORT=${PORT}
#    ports:
#      - ${PORT}:${PORT}
#    volumes:
#      - ./:/usr/app
#      - /usr/app/node_modules
#    networks:
#      - app-network
#    restart: always
#
#volumes:
#  logs:
#  data:
#  node-modules:
#
#networks:
#  app-network:
#    driver: bridge
